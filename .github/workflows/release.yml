name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  release:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Determine next version
        id: version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          BASE=${LAST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE"
          PATCH=$((PATCH + 1))
          VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          RELEASE=${VERSION#v}
          VERSION_NUMBER=$(date +'%Y%m%d00')

          echo "➡️ Preparing release $VERSION (version.php = $VERSION_NUMBER)"
          {
            echo "VERSION=$VERSION"
            echo "RELEASE=$RELEASE"
            echo "VERSION_NUMBER=$VERSION_NUMBER"
          } >> "$GITHUB_ENV"

      - name: Update version numbers in version.php and install.xml
        run: |
          echo "🔧 Updating version.php and install.xml to version $VERSION_NUMBER ($RELEASE)"

          sed -i "s/\(\$plugin->version *= *\)[0-9]*/\1$VERSION_NUMBER/" version.php
          sed -i "s/\(\$plugin->release *= *'\)[^']*/\1$RELEASE/" version.php
          sed -i "s/VERSION=\"[0-9]*\"/VERSION=\"$VERSION_NUMBER\"/" db/install.xml

      - name: Commit version bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if git diff --quiet; then
            echo "No changes detected, skipping commit."
          else
            git config user.name "github-actions"
            git config user.email "actions@github.com"
            git add version.php db/install.xml
            git commit -m "chore: release $VERSION"
            git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}" HEAD:${{ github.ref_name }}
          fi

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -a "$VERSION" -m "Automated release $VERSION"
          git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}" "$VERSION"

      - name: Prepare ZIP archive
        run: |
          zip -r autonumber.zip . \
            -x "*.git*" "*.DS_Store" "*.history*" ".idea/*" ".vscode/*" "node_modules/*" "vendor/*" "build/*" "ci/*" ".github/*"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          files: autonumber.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
