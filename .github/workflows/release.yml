name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Set version and tag (incremental)
        id: version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          BASE=${LAST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE"
          PATCH=$((PATCH + 1))
          VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          echo "‚û°Ô∏è Creating release $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag -a "$VERSION" -m "Automated release $VERSION"
          git push origin "$VERSION"

      - name: Update version numbers in version.php and install.xml
        run: |
          VERSION_NUMBER=$(date +'%Y%m%d00')
          RELEASE_NUMBER=$(echo "${{ env.VERSION }}" | sed 's/^v//')
          echo "üîß Updating version.php and install.xml to version $VERSION_NUMBER ($RELEASE_NUMBER)"

          # –û–±–Ω–æ–≤–ª—è–µ–º version.php
          sed -i "s/\\(\$plugin->version *= *\\)[0-9]*/\\1$VERSION_NUMBER/" autonumber/version.php
          sed -i "s/\\(\$plugin->release *= *'\\)[^']*/\\1$RELEASE_NUMBER/" autonumber/version.php

          # –û–±–Ω–æ–≤–ª—è–µ–º install.xml
          sed -i "s/VERSION=\"[0-9]*\"/VERSION=\"$VERSION_NUMBER\"/" autonumber/db/install.xml

      - name: Prepare ZIP archive
        run: |
          zip -r certificateelement_autonumber-${{ env.VERSION }}.zip . \
            -x "*.git*" "*.DS_Store" "*.history*" ".idea/*" ".vscode/*" "node_modules/*" "vendor/*" "build/*" "ci/*" ".github/*"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          files: certificateelement_autonumber-${{ env.VERSION }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
