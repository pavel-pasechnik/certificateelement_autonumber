name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Prepare release version
        id: prep
        run: |
          LAST_TAG=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' || echo "")
          if [[ -z "$LAST_TAG" ]]; then
            TAG="v1.0.0"
          else
            VERSION=$(echo "$LAST_TAG" | sed 's/^v//')
            MAJOR=$(echo "$VERSION" | cut -d. -f1)
            MINOR=$(echo "$VERSION" | cut -d. -f2)
            PATCH=$(echo "$VERSION" | cut -d. -f3)
            PATCH=$((PATCH + 1))
            TAG="v${MAJOR}.${MINOR}.${PATCH}"
          fi

          DATE=$(date +%Y%m%d)
          BUILD="00"
          VERSION_NUMBER="${DATE}${BUILD}"

          echo "version_number=$VERSION_NUMBER" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Update version.php and install.xml
        run: |
          VERSION_NUMBER="${{ steps.prep.outputs.version_number }}"
          TAG="${{ steps.prep.outputs.tag }}"

          # Обновляем version.php
          sed -i "s/\(\$plugin->version\s*=\s*\)[0-9]\+;/\1${VERSION_NUMBER};/" version.php
          sed -i "s/\(\$plugin->release\s*=\s*'\)[^']*'/\1${TAG#v}'/" version.php

          # Обновляем db/install.xml
          if [ -f db/install.xml ]; then
            sed -i "s/VERSION=\"[0-9]\+\"/VERSION=\"${VERSION_NUMBER}\"/" db/install.xml
          fi

      - name: Create release package
        run: |
          TAG="${{ steps.prep.outputs.tag }}"

          zip -r certificateelement_autonumber.zip . \
            -x ".github/*" ".git/*" ".gitignore" ".*" "__MACOSX/*" ".DS_Store"

          gh release create "$TAG" certificateelement_autonumber.zip \
            -t "Release $TAG" \
            -n "Automated release build for $TAG"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
